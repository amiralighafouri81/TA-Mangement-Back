Index: back-end/faculty/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.urls import path\r\nfrom rest_framework_nested import routers\r\nfrom . import views\r\n\r\nurlpatterns = [\r\n    path('students/', views.student_list),\r\n    path('students/<int:id>/', views.student_detail),\r\n    path('instructors/', views.instructor_list),\r\n    path('instructors/<int:id>/', views.instructor_detail),\r\n]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/back-end/faculty/urls.py b/back-end/faculty/urls.py
--- a/back-end/faculty/urls.py	(revision 93b9042b44f7a23bf9d58e4fd7c257d1f6b0d2bc)
+++ b/back-end/faculty/urls.py	(date 1734785157398)
@@ -1,10 +1,9 @@
 from django.urls import path
-from rest_framework_nested import routers
 from . import views
 
 urlpatterns = [
-    path('students/', views.student_list),
-    path('students/<int:id>/', views.student_detail),
-    path('instructors/', views.instructor_list),
-    path('instructors/<int:id>/', views.instructor_detail),
-]
\ No newline at end of file
+    path('students/', views.student_list, name='student-list'),
+    path('students/<int:id>/', views.student_detail, name='student-detail'),
+    path('instructors/', views.instructor_list, name='instructor-list'),
+    path('instructors/<int:id>/', views.instructor_detail, name='instructor-detail'),
+]
Index: back-end/faculty/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.test import TestCase\r\n\r\n# Create your tests here.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/back-end/faculty/tests.py b/back-end/faculty/tests.py
--- a/back-end/faculty/tests.py	(revision 93b9042b44f7a23bf9d58e4fd7c257d1f6b0d2bc)
+++ b/back-end/faculty/tests.py	(date 1734786171543)
@@ -1,3 +1,96 @@
-from django.test import TestCase
+from django.urls import reverse
+from rest_framework.test import APITestCase
+from rest_framework import status
+from .models import Student, Instructor
+from core.models import User  # Import your custom User model
+
+class FacultyAPITestCase(APITestCase):
+
+    def setUp(self):
+        # Create test users
+        self.user1 = User.objects.create_user(first_name="ali", last_name="alavi", username="alialavi", password="1234", role=User.STUDENT)
+        self.user2 = User.objects.create_user(first_name="naghi", last_name="naghavi", username="naghinaghavi", password="1234", role=User.STUDENT)
+        self.user3 = User.objects.create_user(first_name="ramak", last_name="ghavami", username="ramak", password="1234", role=User.INSTRUCTOR)
+        self.user4 = User.objects.create_user(first_name="farshad", last_name="safaee", username="farshad", password="1234", role=User.INSTRUCTOR)
+
+        # Create test data for students and instructors
+        self.student1 = Student.objects.create(user=self.user1, student_number="1", biography="A hardworking student")
+        self.student2 = Student.objects.create(user=self.user2, student_number="2", biography="A nice person")
+
+        self.instructor1 = Instructor.objects.create(user=self.user3, staff_id="1", way_of_communication="Email", research_fields="Algorithms")
+        self.instructor2 = Instructor.objects.create(user=self.user4, staff_id="2", way_of_communication="Phone", research_fields="Graph Theory")
 
-# Create your tests here.
+    # Test student list endpoint
+    def test_student_list(self):
+        url = reverse('student-list')  # Endpoint for listing students
+        response = self.client.get(url)
+        self.assertEqual(response.status_code, status.HTTP_200_OK)
+        self.assertEqual(len(response.json()), 2)
+
+    # Test student detail endpoint
+    def test_student_detail(self):
+        url = reverse('student-detail', args=[self.student1.id])
+        response = self.client.get(url)
+        self.assertEqual(response.status_code, status.HTTP_200_OK)
+        self.assertEqual(response.json()['biography'], self.student1.biography)
+
+    def test_student_detail_not_found(self):
+        url = reverse('student-detail', args=[999])  # Non-existent ID
+        response = self.client.get(url)
+        self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
+
+    # Test instructor list endpoint
+    def test_instructor_list(self):
+        url = reverse('instructor-list')  # Endpoint for listing instructors
+        response = self.client.get(url)
+        self.assertEqual(response.status_code, status.HTTP_200_OK)
+        self.assertEqual(len(response.json()), 2)
+
+    # Test instructor detail endpoint
+    def test_instructor_detail(self):
+        url = reverse('instructor-detail', args=[self.instructor1.id])
+        response = self.client.get(url)
+        self.assertEqual(response.status_code, status.HTTP_200_OK)
+        self.assertEqual(response.json()['research_fields'], self.instructor1.research_fields)
+
+    def test_instructor_detail_not_found(self):
+        url = reverse('instructor-detail', args=[999])  # Non-existent ID
+        response = self.client.get(url)
+        self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
+
+    # Test student creation endpoint
+    def test_create_student(self):
+        url = reverse('student-list')
+        data = {
+            "user": {
+                "first_name": "new",
+                "last_name": "student",
+                "username": "newstudent",
+                "password": "1234",
+                "role": User.STUDENT
+            },
+            "student_number": "3",
+            "biography": "A new student"
+        }
+        response = self.client.post(url, data, format='json')
+        self.assertEqual(response.status_code, status.HTTP_201_CREATED)
+        self.assertEqual(Student.objects.count(), 3)
+
+    # Test instructor creation endpoint
+    def test_create_instructor(self):
+        url = reverse('instructor-list')
+        data = {
+            "user": {
+                "first_name": "new",
+                "last_name": "instructor",
+                "username": "newinstructor",
+                "password": "1234",
+                "role": User.INSTRUCTOR
+            },
+            "staff_id": "3",
+            "way_of_communication": "Video Call",
+            "research_fields": "Machine Learning"
+        }
+        response = self.client.post(url, data, format='json')
+        self.assertEqual(response.status_code, status.HTTP_201_CREATED)
+        self.assertEqual(Instructor.objects.count(), 3)
Index: back-end/faculty/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import get_object_or_404\r\nfrom django.http import HttpResponse\r\nfrom rest_framework.decorators import api_view\r\nfrom rest_framework.response import Response\r\nfrom rest_framework import status\r\nfrom rest_framework.viewsets import ModelViewSet\r\nfrom rest_framework.mixins import CreateModelMixin, ListModelMixin\r\nfrom .models import Student, Instructor\r\nfrom .serializers import StudentSerializer, InstructorSerializer\r\n\r\n@api_view()\r\ndef student_list(request):\r\n    queryset = Student.objects.all()\r\n    serializer = StudentSerializer(queryset, many=True)\r\n    return Response(serializer.data)\r\n\r\n@api_view()\r\ndef student_detail(request, id):\r\n    student = get_object_or_404(Student, pk=id)\r\n    serializer = StudentSerializer(student)\r\n    return Response(serializer.data)\r\n\r\n\r\n@api_view()\r\ndef instructor_list(request):\r\n    queryset = Instructor.objects.all()\r\n    serializer = InstructorSerializer(queryset, many=True)\r\n    return Response(serializer.data)\r\n\r\n@api_view()\r\ndef instructor_detail(request, id):\r\n    instructor = get_object_or_404(Instructor, pk=id)\r\n    serializer = InstructorSerializer(instructor)\r\n    return Response(serializer.data)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/back-end/faculty/views.py b/back-end/faculty/views.py
--- a/back-end/faculty/views.py	(revision 93b9042b44f7a23bf9d58e4fd7c257d1f6b0d2bc)
+++ b/back-end/faculty/views.py	(date 1734797692476)
@@ -7,6 +7,10 @@
 from rest_framework.mixins import CreateModelMixin, ListModelMixin
 from .models import Student, Instructor
 from .serializers import StudentSerializer, InstructorSerializer
+from rest_framework.views import APIView
+
+# class ProductList(APIView):
+    
 
 @api_view()
 def student_list(request):
Index: back-end/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/back-end/.gitignore b/.gitignore
rename from back-end/.gitignore
rename to .gitignore
--- a/back-end/.gitignore	(revision 93b9042b44f7a23bf9d58e4fd7c257d1f6b0d2bc)
+++ b/.gitignore	(date 1734783927249)
@@ -1,2 +1,2 @@
-venv/
-db.sqlite3/
\ No newline at end of file
+back-end/venv/
+back-end/db.sqlite3/
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b9d0de78-9454-470e-a3d1-875e95045b01\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/entrypoint.sh\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Dockerfile\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Dockerfile\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/back-end/TAmanagement/settings.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/back-end/TAmanagement/settings.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/docker-compose.yaml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/docker-compose.yaml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"DjangoConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\">\r\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ozJk3AHEpbQFEnbjOw8J65i2G2\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenDjangoStructureViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"Merging main\",\r\n    \"last_opened_file_path\": \"D:/University/term 7/SE/TA-Mangement-Back\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"TA-Mangement-Back\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-PY-242.20224.347\" />\r\n        <option value=\"bundled-python-sdk-c2d6afa66fbe-39cff9de6eef-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.20224.347\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b9d0de78-9454-470e-a3d1-875e95045b01\" name=\"Changes\" comment=\"\" />\r\n      <created>1731866610772</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1731866610772</updated>\r\n      <workItem from=\"1731866611913\" duration=\"1167000\" />\r\n      <workItem from=\"1732265408012\" duration=\"491000\" />\r\n      <workItem from=\"1732265920900\" duration=\"1012000\" />\r\n      <workItem from=\"1732267555188\" duration=\"366000\" />\r\n      <workItem from=\"1732272526839\" duration=\"1302000\" />\r\n      <workItem from=\"1732285016946\" duration=\"84000\" />\r\n      <workItem from=\"1732286588236\" duration=\"3393000\" />\r\n      <workItem from=\"1732465003184\" duration=\"5240000\" />\r\n      <workItem from=\"1732535656096\" duration=\"42000\" />\r\n      <workItem from=\"1732637106638\" duration=\"5693000\" />\r\n      <workItem from=\"1732691456410\" duration=\"5577000\" />\r\n      <workItem from=\"1732698157222\" duration=\"612000\" />\r\n      <workItem from=\"1732779081808\" duration=\"2705000\" />\r\n      <workItem from=\"1732794441000\" duration=\"7786000\" />\r\n      <workItem from=\"1732871660605\" duration=\"124000\" />\r\n      <workItem from=\"1732949889303\" duration=\"586000\" />\r\n      <workItem from=\"1733065966217\" duration=\"8375000\" />\r\n      <workItem from=\"1733843973049\" duration=\"6187000\" />\r\n      <workItem from=\"1733905442719\" duration=\"5474000\" />\r\n      <workItem from=\"1733937235678\" duration=\"1518000\" />\r\n      <workItem from=\"1734006787966\" duration=\"14539000\" />\r\n      <workItem from=\"1734081025334\" duration=\"11960000\" />\r\n      <workItem from=\"1734647384084\" duration=\"370000\" />\r\n      <workItem from=\"1734690526220\" duration=\"1703000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 93b9042b44f7a23bf9d58e4fd7c257d1f6b0d2bc)
+++ b/.idea/workspace.xml	(date 1734797487820)
@@ -5,10 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b9d0de78-9454-470e-a3d1-875e95045b01" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/entrypoint.sh" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/back-end/TAmanagement/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/TAmanagement/settings.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/back-end/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/back-end/faculty/tests.py" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/faculty/tests.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/back-end/faculty/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/faculty/urls.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -41,9 +41,14 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "Django tests.Test: faculty.tests.FacultyAPITestCase.test_create_student.executor": "Run",
+    "Django tests.Test: faculty.tests.FacultyAPITestCase.test_instructor_list.executor": "Run",
+    "Django tests.Test: faculty.tests.FacultyAPITestCase.test_student_detail.executor": "Run",
+    "Django tests.Test: faculty.tests.FacultyAPITestCase.test_student_detail_not_found.executor": "Run",
+    "Django tests.Test: faculty.tests.FacultyAPITestCase.test_student_list.executor": "Run",
     "RunOnceActivity.OpenDjangoStructureViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "Merging main",
+    "git-widget-placeholder": "main",
     "last_opened_file_path": "D:/University/term 7/SE/TA-Mangement-Back",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
@@ -54,7 +59,117 @@
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
-  <component name="RunManager">
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\University\term 7\SE\TA-Mangement-Back" />
+    </key>
+  </component>
+  <component name="RunManager" selected="Django tests.Test: faculty.tests.FacultyAPITestCase.test_create_student">
+    <configuration name="Test: faculty.tests.FacultyAPITestCase.test_create_student" type="DjangoTestsConfigurationType" temporary="true">
+      <module name="TA-Mangement-Back" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="TARGET" value="faculty.tests.FacultyAPITestCase.test_create_student" />
+      <option name="SETTINGS_FILE" value="" />
+      <option name="CUSTOM_SETTINGS" value="false" />
+      <option name="USE_OPTIONS" value="false" />
+      <option name="OPTIONS" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="Test: faculty.tests.FacultyAPITestCase.test_instructor_list" type="DjangoTestsConfigurationType" temporary="true">
+      <module name="TA-Mangement-Back" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="TARGET" value="faculty.tests.FacultyAPITestCase.test_instructor_list" />
+      <option name="SETTINGS_FILE" value="" />
+      <option name="CUSTOM_SETTINGS" value="false" />
+      <option name="USE_OPTIONS" value="false" />
+      <option name="OPTIONS" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="Test: faculty.tests.FacultyAPITestCase.test_student_detail" type="DjangoTestsConfigurationType" temporary="true">
+      <module name="TA-Mangement-Back" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="TARGET" value="faculty.tests.FacultyAPITestCase.test_student_detail" />
+      <option name="SETTINGS_FILE" value="" />
+      <option name="CUSTOM_SETTINGS" value="false" />
+      <option name="USE_OPTIONS" value="false" />
+      <option name="OPTIONS" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="Test: faculty.tests.FacultyAPITestCase.test_student_detail_not_found" type="DjangoTestsConfigurationType" temporary="true">
+      <module name="TA-Mangement-Back" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="TARGET" value="faculty.tests.FacultyAPITestCase.test_student_detail_not_found" />
+      <option name="SETTINGS_FILE" value="" />
+      <option name="CUSTOM_SETTINGS" value="false" />
+      <option name="USE_OPTIONS" value="false" />
+      <option name="OPTIONS" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="Test: faculty.tests.FacultyAPITestCase.test_student_list" type="DjangoTestsConfigurationType" temporary="true">
+      <module name="TA-Mangement-Back" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="TARGET" value="faculty.tests.FacultyAPITestCase.test_student_list" />
+      <option name="SETTINGS_FILE" value="" />
+      <option name="CUSTOM_SETTINGS" value="false" />
+      <option name="USE_OPTIONS" value="false" />
+      <option name="OPTIONS" value="" />
+      <method v="2" />
+    </configuration>
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
       <module name="TA-Mangement-Back" />
       <option name="ENV_FILES" value="" />
@@ -78,6 +193,15 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Django tests.Test: faculty.tests.FacultyAPITestCase.test_create_student" />
+        <item itemvalue="Django tests.Test: faculty.tests.FacultyAPITestCase.test_instructor_list" />
+        <item itemvalue="Django tests.Test: faculty.tests.FacultyAPITestCase.test_student_detail_not_found" />
+        <item itemvalue="Django tests.Test: faculty.tests.FacultyAPITestCase.test_student_list" />
+        <item itemvalue="Django tests.Test: faculty.tests.FacultyAPITestCase.test_student_detail" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
@@ -118,11 +242,20 @@
       <workItem from="1734006787966" duration="14539000" />
       <workItem from="1734081025334" duration="11960000" />
       <workItem from="1734647384084" duration="370000" />
-      <workItem from="1734690526220" duration="1703000" />
+      <workItem from="1734690526220" duration="1897000" />
+      <workItem from="1734701788818" duration="50000" />
+      <workItem from="1734783206285" duration="3965000" />
     </task>
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/TA_Mangement_Back$Test__faculty_tests_FacultyAPITestCase_test_student_detail_not_found.coverage" NAME="Test: faculty.tests.FacultyAPITestCase.test_student_detail_not_found Coverage Results" MODIFIED="1734786277446" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
+    <SUITE FILE_PATH="coverage/TA_Mangement_Back$Test__faculty_tests_FacultyAPITestCase_test_create_student.coverage" NAME="Test: faculty.tests.FacultyAPITestCase.test_create_student Coverage Results" MODIFIED="1734786601896" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
+    <SUITE FILE_PATH="coverage/TA_Mangement_Back$Test__faculty_tests_FacultyAPITestCase_test_student_detail.coverage" NAME="Test: faculty.tests.FacultyAPITestCase.test_student_detail Coverage Results" MODIFIED="1734786206574" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
+    <SUITE FILE_PATH="coverage/TA_Mangement_Back$Test__faculty_tests_FacultyAPITestCase_test_student_list.coverage" NAME="Test: faculty.tests.FacultyAPITestCase.test_student_list Coverage Results" MODIFIED="1734786260446" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
+    <SUITE FILE_PATH="coverage/TA_Mangement_Back$Test__faculty_tests_FacultyAPITestCase_test_instructor_list.coverage" NAME="Test: faculty.tests.FacultyAPITestCase.test_instructor_list Coverage Results" MODIFIED="1734786298564" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
+  </component>
 </project>
\ No newline at end of file
